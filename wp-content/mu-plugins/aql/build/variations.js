(()=>{"use strict";var e={d:(t,r)=>{for(var a in r)e.o(r,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:r[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{y:()=>E});const t=window.wp.blocks,r=window.wp.i18n,a=window.wp.element,o=window.wp.hooks,n=window.wp.blockEditor,u={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let l;const m=new Uint8Array(16);function y(){if(!l&&(l="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!l))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return l(m)}const i=[];for(let e=0;e<256;++e)i.push((e+256).toString(16).slice(1));const c=function(e,t,r){if(u.randomUUID&&!t&&!e)return u.randomUUID();const a=(e=e||{}).random||(e.rng||y)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=a[e];return t}return function(e,t=0){return(i[e[t+0]]+i[e[t+1]]+i[e[t+2]]+i[e[t+3]]+"-"+i[e[t+4]]+i[e[t+5]]+"-"+i[e[t+6]]+i[e[t+7]]+"-"+i[e[t+8]]+i[e[t+9]]+"-"+i[e[t+10]]+i[e[t+11]]+i[e[t+12]]+i[e[t+13]]+i[e[t+14]]+i[e[t+15]]).toLowerCase()}(a)},s=window.wp.components,d=window.wp.coreData,p=["=","!=",">",">=","<","<=","LIKE","NOT LIKE","IN","NOT IN","BETWEEN","NOT BETWEEN","NOT EXISTS","REGEXP","NOT REGEXP","RLIKE"],q=e=>{let{registeredMetaKeys:t,id:o,queries:n,metaKey:u,metaValue:l,metaCompare:m,attributes:y,setAttributes:i}=e;const c=n.find((e=>e.id===o)),d=(e,t,r,a)=>e.map((e=>e.id===t?{...e,[r]:a}:e));return(0,a.createElement)(a.Fragment,null,(0,a.createElement)(s.BaseControl,{help:(0,r.__)("Start typing to search for a meta key or manually enter one.","advanced-query-loop")},(0,a.createElement)(s.FormTokenField,{label:(0,r.__)("Meta Key","advanced-query-loop"),value:c?.meta_key?.length?[c.meta_key]:[],__experimentalShowHowTo:!1,suggestions:t,maxLength:1,onChange:e=>{i({query:{...y.query,meta_query:{...y.query.meta_query,queries:d(n,o,"meta_key",e[0])}}})}})),(0,a.createElement)(s.TextControl,{label:(0,r.__)("Meta Value","advanced-query-loop"),value:c.meta_value,onChange:e=>{i({query:{...y.query,meta_query:{...y.query.meta_query,queries:d(n,o,"meta_value",e)}}})}}),(0,a.createElement)(s.SelectControl,{label:(0,r.__)("Meta Compare","advanced-query-loop"),value:c.meta_compare,options:[...p.map((e=>({label:e,value:e})))],onChange:e=>{i({query:{...y.query,meta_query:{...y.query.meta_query,queries:d(n,o,"meta_compare",e)}}})}}),(0,a.createElement)(s.Button,{isSmall:!0,variant:"secondary",isDestructive:!0,onClick:()=>{const e=n.filter((e=>e.id!==o));i({query:{...y.query,meta_query:{...y.query.meta_query,queries:e}}})}},(0,r.__)("Remove meta query","advanced-query-loop")))},_=e=>{let{attributes:t,setAttributes:o}=e;const{query:{postType:n,meta_query:{relation:u="",queries:l=[]}={}}={}}=t,{records:m}=(0,d.useEntityRecords)("postType",n,{per_page:1}),[y]=(0,a.useState)(n),i=m?.[0]?.meta||{};return(0,a.useEffect)((()=>{n!==y&&o({query:{...t.query,meta_query:{}}})}),[n]),(0,a.createElement)(s.PanelBody,{title:(0,r.__)("Post Meta Query","advanced-query-loop")},(0,a.createElement)(a.Fragment,null,l.length>1&&(0,a.createElement)(s.SelectControl,{label:(0,r.__)("Query Relationship","advanced-query-loop"),value:u,options:[{label:"Choose relationship",value:""},{label:"AND",value:"AND"},{label:"OR",value:"OR"}],onChange:e=>o({query:{...t.query,meta_query:{...t.query.meta_query,relation:e}}})}),l.length<1&&(0,a.createElement)("p",null,(0,r.__)("Add a meta query to select post meta to query","advanced-query-loop")),l.map((e=>{let{id:r,meta_key:n,meta_value:u,compare:m}=e;return(0,a.createElement)(s.PanelBody,{key:r},(0,a.createElement)(q,{id:r,metaKey:n,metaValue:u,metaCompare:m,registeredMetaKeys:Object.keys(i),queries:l,attributes:t,setAttributes:o}))})),(0,a.createElement)(s.Button,{isSmall:!0,variant:"primary",onClick:()=>{const e=[...l,{id:c(),meta_key:"",meta_value:"",meta_compare:""}];o({query:{...t.query,meta_query:{...t.query.meta_query,queries:e}}})}},(0,r.__)("Add meta query","advanced-query-loop"))))};(0,o.addFilter)("editor.BlockEdit","core/query",(e=>t=>(e=>{const{attributes:{namespace:t,query:{inherit:r}={}}}=e;return t&&t===E&&!1===r})(t)?(0,a.createElement)(a.Fragment,null,(0,a.createElement)(e,t),(0,a.createElement)(n.InspectorControls,null,(0,a.createElement)(_,t))):(0,a.createElement)(e,t)));const E="advanced-query-loop";(0,t.registerBlockVariation)("core/query",{name:E,title:(0,r.__)("Advanced Query Loop","advanced-query-loop"),description:(0,r.__)("Create advanced queries","advanced-query-loop"),isActive:["namespace"],attributes:{namespace:E},scope:["inserter"]})})();